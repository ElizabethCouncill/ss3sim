% Generated by roxygen2 (4.0.2): do not edit by hand
\name{change_data}
\alias{change_data}
\title{Change the data that is available as output from an SS operating model.}
\usage{
change_data(file_in, file_out, fleets = NULL, years = NULL, types = NULL,
  age_bins = NULL, len_bins = NULL, pop_bin = NULL, write_file = TRUE)
}
\arguments{
  \item{file_in}{A character value giving the location of
  an SS \code{.dat} file to input.}

  \item{file_out}{A character value giving the location of
  an SS \code{.dat} file to output.}

  \item{types}{A vector that can take the one or all of the
  following entries: \code{"len"}, \code{"age"},
  \code{"cal"}, \code{"mla"}, \code{"mwa"}. \code{types}
  controls what data structures the function acts on, with
  \code{"len"} augmenting the length composition data,
  \code{"age"} augmenting the age composition, \code{"cal"}
  augmenting the conditional age at length, \code{"mla"}
  augmenting the mean length at age data, and \code{"mwa"}
  augmenting the mean weight at age data. Default is
  \code{"len"}.}

  \item{len_bins}{A named list of vectors. Named elements
  provide the desired bin structure for each data
  \code{types}. If \code{types = "len"} or \code{types =
  "age"} \code{len_bins} should be a vector of new bins.
  For other types in \code{len_bins} the bins are
  determined from the current or specified length and age
  bins. If names are forgotten, list elements will be named
  according to the order of entries in \code{types}.}

  \item{pop_bin}{A positive real number for the population
  bin width. This option only works if \code{"lbin_method"}
  is set to \code{"2"} in SS3. Default is \code{pop_bin =
  NULL} which leaves the original value.}

  \item{write_file}{Should the \code{.dat} file be written?
  The new \code{.dat} file will always be returned
  invisibly by the function. Setting \code{write_file =
  FALSE} can be useful for testing. Note that you must
  supply a value to the argument \code{file_out}, but this
  argument can be set to any arbitrary value (such as
  \code{NULL}) if \code{write_file = FALSE}.}

  \item{fleet_dat}{A named list of vectors giving the
  desired fleets and years for each data type. The names of
  the list elements should correspond to the \code{types}
  and each present element should have \code{$years} and
  \code{$fleets} giving the vector of desired years and
  fleets. Named elements only need to be specified for
  those required by \code{types}.}
}
\description{
\code{change_data} alters the bin structure for the age or
length composition data in an SS operating model. Original
data is removed and dummy data is added at the appropriate
bin sizes to the SS \code{.dat} file. This causes SS to
record age or length composition data in the appropriate
bins when the operating model is run. Additionally,
\code{change_data} will introduce dummy conditional
length-at-age or size- (weight or length) at-age data to
the \code{.dat} file. For each data type altered,
\code{change_data} will add data in a full factorial
manner, working with existing fleets for all years;
potentially adding many rows of data. Currently,
\code{.dat} files with multiple genders cannot be
manipulated with \code{change_data}. Use
\code{\link{sample_lcomp}}, \code{\link{sample_agecomp}},
and \code{\link{sample_calcomp}} to reduce the data. It is
not intended for an \pkg{ss3sim} user to use
\code{change_data} directly. Instead \code{change_data} is
called internally by \code{\link{ss3sim_base}} based on
arguments to the sampling functions.
}
\details{
Within the \code{.dat} file, the conditional age-at-length
data is stored in the same matrix as the age composition
data. Thus, it is necessary that the conditional
age-at-length data use the same binning structure as the
age composition data. If \code{types = "caa"} and not
\code{types = c("age", "caa")} the function will add
conditional age-at-length using the binning structure of
the current \code{.dat} file.  Also note that if
\code{types = c("mla", "mwa")} no entries are currently
necessary in the \code{len_bins}.
}
\examples{
## These examples are in development still and untested
d <- system.file("extdata", package = "ss3sim")
fleets <- 1:2
years <- c(5,10,15)
types <- c("len", "age")
file_in <- paste0(d, "models/cod-om/codOM.dat")
## Basic test with just length data, default bins
out <- change_data(file_in,"test2.dat", types="len", years=years,
                   fleets=fleets, write_file=FALSE)
print(out$lbin_vector)
print(tail(out$lencomp[, 1:8]))
## Change the length bins
out <- change_data(file_in,"test.dat", types="len", years=years,
                   fleets=fleets, len_bins=3:6, write_file=FALSE)
print(out$lbin_vector)
print(tail(out$lencomp[, 1:8]))
## Change data types
out <- change_data(file_in,"test.dat", types=c("len", "age"), years=years,
                   fleets=fleets, len_bins=3:6, age_bins=5:7, write_file=FALSE)
print(out$agebin_vector)
print(out$lbin_vector)
print(names(out$agecomp))
print(names(out$lencomp))
}
\author{
Cole Monnahan, Ian Taylor, Sean Anderson, Kelli Johnson
}
\seealso{
\code{\link{sample_lcomp}}, \code{\link{sample_agecomp}}
}

